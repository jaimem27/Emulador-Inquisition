using System;
using Stump.Core.Reflection;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Maps;

namespace Stump.Server.WorldServer.Database.World {
    [TableName ("world_maps_prism")]
    public sealed class WorldMapPrismRecord : IAutoGeneratedRecord {
        private Map m_map;

        [PrimaryKey ("Id")]
        public int Id { get; set; }

        public int AllianceId { get; set; }
        public int? MapId { get; set; }

        [Ignore]
        public Map Map {
            get {
                Map result;
                if (MapId.HasValue) {
                    if (m_map == null) {
                        m_map = Singleton<Game.World>.Instance.GetMap (MapId.Value);
                    }
                    result = m_map;
                } else {
                    result = null;
                }
                return result;
            }
            set {
                m_map = value;
                if (value == null) {
                    MapId = null;
                } else {
                    MapId = value.Id;
                }
            }
        }

        public int Cell { get; set; }
        public DateTime Date { get; set; }
        public DateTime NextDate { get; set; }

        /// <summary>
        ///     Alliance Sabotaged
        /// </summary>
        public bool IsSabotaged { get; set; }

        /// <summary>
        ///     Fight lose
        /// </summary>
        public bool IsDefated { get; set; }

        public DateTime LastTimeSlotModificationDate { get; set; }
        public int LastTimeSlotModificationAuthorGuildId { get; set; }
        public int LastTimeSlotModificationAuthorId { get; set; }
        public string LastTimeSlotModificationAuthorName { get; set; }
        public bool IsWeakened { get; set; }
        public DateTime NuggetBeginDate { get; set; }
    }
}