using Stump.Core.IO;
using Stump.DofusProtocol.Enums;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Spells;
using System.Collections.Generic;

namespace Stump.Server.WorldServer.Database.Spells
{
    public class CustomIncarnationRelator
    {
        public static string FetchQuery = "SELECT * FROM incarnations_custom";

    }

    [TableName("incarnations_custom")]
    public class CustomIncarnationRecord : IAutoGeneratedRecord
    {
        private string m_SpellsCSV;
        public CustomIncarnationRecord()
        {
            Stats = new Dictionary<PlayerFields, short>();
        }

        [PrimaryKey("Id")]
        public int Id
        {
            get;
            set;
        }

        public string SpellIdsCSV
        {
            get
            {
                return m_SpellsCSV;
            }
            set
            {
                m_SpellsCSV = value;
            }
        }

        public int? ItemId
        {
            get;
            set;
        }

        public string FemaleCustomLookString
        {
            get;
            set;
        }
        public string MaleCustomLookString
        {
            get;
            set;
        }

        [Ignore]
        public Spell[] Spells
        {
            get
            {
                List<Spell> splls = new List<Spell>();
                var spellsIds = m_SpellsCSV.FromCSV<int>(",");
                foreach (var spellId in spellsIds)
                {
                    splls.Add(new Spell(spellId, 1));
                }
                return splls.ToArray();
            }
        }
        public bool AllowEquip
        {
            get;
            set;
        }
        public int PaDodge
        {
            get;
            set;
        }

        public int PmDodge
        {
            get;
            set;
        }

        public int EarthResistancePercent
        {
            get;
            set;
        }

        public int AirResistancePercent
        {
            get;
            set;
        }

        public int FireResistancePercent
        {
            get;
            set;
        }

        public int WaterResistancePercent
        {
            get;
            set;
        }

        public int NeutralResistancePercent
        {
            get;
            set;
        }
        public int EarthElementReduction
        {
            get;
            set;
        }

        public int AirElementReduction
        {
            get;
            set;
        }

        public int FireElementReduction
        {
            get;
            set;
        }

        public int WaterElementReduction
        {
            get;
            set;
        }

        public int NeutralElementReduction
        {
            get;
            set;
        }

        public int LifePoints
        {
            get;
            set;
        }

        public int ActionPoints
        {
            get;
            set;
        }

        public int MovementPoints
        {
            get;
            set;
        }

        public int Range
        {
            get;
            set;
        }
        public int CriticalHit
        {
            get;
            set;
        }


        public short TackleEvade
        {
            get;
            set;
        }

        public short TackleBlock
        {
            get;
            set;
        }

        public short Strength
        {
            get;
            set;
        }

        public short Chance
        {
            get;
            set;
        }

        public short Vitality
        {
            get;
            set;
        }

        public short Wisdom
        {
            get;
            set;
        }

        public short Intelligence
        {
            get;
            set;
        }

        public short Agility
        {
            get;
            set;
        }
        public short Initiative
        {
            get;
            set;
        }

        public short Summons
        {
            get;
            set;
        }
        public short EarthDamageBonus
        {
            get;
            set;
        }
        public short WaterDamageBonus
        {
            get;
            set;
        }
        public short AirDamageBonus
        {
            get;
            set;
        }
        public short FireDamageBonus
        {
            get;
            set;
        }

        [Ignore]
        public Dictionary<PlayerFields, short> Stats
        {
            get;
            set;
        }
        public string CustomLookString { get; internal set; }
    }
}