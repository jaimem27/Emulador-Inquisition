using Stump.DofusProtocol.Enums;
using Stump.DofusProtocol.Messages;
using Stump.DofusProtocol.Types;
using Stump.Server.BaseServer.Network;
using Stump.Server.WorldServer.Core.Network;
using Stump.Server.WorldServer.Database.Shortcuts;
using Stump.Server.WorldServer.Game.Spells;
using System.Linq;

namespace Stump.Server.WorldServer.Handlers.Context.RolePlay
{
    public partial class ContextRoleplayHandler : WorldHandlerContainer
    {
        //[WorldHandler(SpellModifyRequestMessage.Id)]
        //public static void HandleSpellModifyRequestMessage(WorldClient client, SpellModifyRequestMessage message)
        //{
        //    client.Character.Spells.BoostSpell(message.spellId, (ushort)message.spellLevel);
        //    client.Character.RefreshStats();
        //}

        //public static void SendSpellModifySuccessMessage(IPacketReceiver client, Spell spell)
        //{
        //    client.Send(new SpellModifySuccessMessage(spell.Id, (sbyte)spell.CurrentLevel));
        //}

        //public static void SendSpellModifySuccessMessage(IPacketReceiver client, int spellId, sbyte level)
        //{
        //    client.Send(new SpellModifySuccessMessage(spellId, level));
        //}

        //public static void SendSpellModifyFailureMessage(IPacketReceiver client)
        //{
        //    client.Send(new SpellModifyFailureMessage());
        //}

        //public static void SendSpellItemBoostMessage(IPacketReceiver client, int statId, short spellId, short value)
        //{
        //    client.Send(new SpellItemBoostMessage(statId, spellId, value));
        //}

        [WorldHandler(SpellVariantActivationRequestMessage.Id)]
        public static void HandleSpellVariantActivationMessage(WorldClient client, SpellVariantActivationRequestMessage message)
        {
            if (client.Character.IsInFight() && client.Character.Fight.State != Game.Fights.FightState.Placement)
            {
                return;
            }
            var breedSpell = SpellManager.GetSpellVariant(message.SpellId);

            if (breedSpell == null)
                return;

            if (client.Character.Breed.Id == breedSpell.BreedId)
            {
                var variant = breedSpell.VariantId == message.SpellId;
                var required = variant ? breedSpell.Spell : breedSpell.VariantId;

                if (client.Character.Spells.GetSpell(required) == null || Game.Actors.RolePlay.Characters.Character.SpellsBlock.Contains(message.SpellId))
                {
                    client.Send(new SpellVariantActivationMessage(message.SpellId, false));
                    return;
                }

                if (client.Character.Level < (variant ? breedSpell.VariantLevel : breedSpell.ObtainLevel))
                {
                    client.Send(new SpellVariantActivationMessage(message.SpellId, false));
                    return;
                }
                client.Character.Shortcuts.SwapSpellShortcuts((short)required, (short)message.SpellId);


                client.Send(new ShortcutBarContentMessage((sbyte)ShortcutBarEnum.SPELL_SHORTCUT_BAR, client.Character.Shortcuts.GetShortcuts(ShortcutBarEnum.SPELL_SHORTCUT_BAR).Select(entry => entry.GetNetworkShortcut())));
                client.Send(new SpellVariantActivationMessage(message.SpellId, true));
            }
            else
            {
                client.Send(new SpellVariantActivationMessage(message.SpellId, false));
            }

        }
    }
}